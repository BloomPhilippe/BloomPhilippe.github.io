{"version":3,"sources":["logo.svg","Store/Reducers/formReducer.js","Store/configureStore.js","Components/Input.js","Components/Information.js","Components/Address.js","Components/Job.js","Components/Result.js","Routes/Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","firstName","value","isValid","lastName","street","number","zip","city","jobTitle","jobDescription","isCompleted","setInputs","state","arguments","length","undefined","action","type","console","log","Object","objectSpread","createStore","combineReducers","Input","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","target","checkValidity","dispatch","_this2","react_default","a","createElement","Form","Group","Label","label","elementType","Control","onBlur","_setValue","required","pattern","min","max","defaultValue","as","rows","Component","defaultProps","connect","Information","form","history","push","setState","Col","className","Row","md","Components_Input","Button","variant","size","onClick","_nextStep","Alert","Address","Link","to","Job","Heading","Routes","routes","path","component","Result","map","route","i","Route","exact","key","App","es","store","Store","Navbar","bg","Brand","href","alt","src","width","height","Jumbotron","logo","Container","BrowserRouter","src_Routes_Routes","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wTCAlCC,EAAe,CACjBC,UAAW,CACPC,MAAO,KACPC,SAAS,GAEbC,SAAU,CACNF,MAAO,KACPC,SAAS,GAEbE,OAAQ,CACJH,MAAO,KACPC,SAAS,GAEbG,OAAQ,CACJJ,MAAO,KACPC,SAAS,GAEbI,IAAK,CACDL,MAAO,KACPC,SAAS,GAEbK,KAAM,CACFN,MAAO,KACPC,SAAS,GAEbM,SAAU,CACNP,MAAO,KACPC,SAAS,GAEbO,eAAgB,CACZR,MAAO,KACPC,SAAS,GAEbQ,aAAa,GA+DFC,MAtDf,WAAiD,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBd,EAAciB,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAE7C,OAAQC,EAAOC,MACX,IAAK,gBAED,OADAC,QAAQC,IAAI,gBACIC,OAAAC,EAAA,EAAAD,CAAA,GACTR,EADS,CAEZZ,UAAWgB,EAAOf,QAE1B,IAAK,eACD,OAAgBmB,OAAAC,EAAA,EAAAD,CAAA,GACTR,EADS,CAEZT,SAAUa,EAAOf,QAEzB,IAAK,aACD,OAAgBmB,OAAAC,EAAA,EAAAD,CAAA,GACTR,EADS,CAEZR,OAAQY,EAAOf,QAEvB,IAAK,aACD,OAAgBmB,OAAAC,EAAA,EAAAD,CAAA,GACTR,EADS,CAEZP,OAAQW,EAAOf,QAEvB,IAAK,UACD,OAAgBmB,OAAAC,EAAA,EAAAD,CAAA,GACTR,EADS,CAEZN,IAAKU,EAAOf,QAEpB,IAAK,WACD,OAAgBmB,OAAAC,EAAA,EAAAD,CAAA,GACTR,EADS,CAEZL,KAAMS,EAAOf,QAErB,IAAK,eACD,OAAgBmB,OAAAC,EAAA,EAAAD,CAAA,GACTR,EADS,CAEZJ,SAAUQ,EAAOf,QAEzB,IAAK,qBACD,OAAgBmB,OAAAC,EAAA,EAAAD,CAAA,GACTR,EADS,CAEZH,eAAgBO,EAAOf,QAE/B,IAAK,cACD,OAAgBmB,OAAAC,EAAA,EAAAD,CAAA,GACTR,EADS,CAEZF,aAAa,IAErB,QACI,OAAOE,ICzFJU,cAAYC,YAAgB,CAACZ,+BCGtCa,qBACF,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAQ,KAAAJ,IACdE,EAAAN,OAAAS,EAAA,EAAAT,CAAAQ,KAAAR,OAAAU,EAAA,EAAAV,CAAAI,GAAAO,KAAAH,KAAMH,KACDxB,MAAQ,GAFCyB,yEAkBRM,GACN,IAAMhB,EAAS,CACXC,KAAMW,KAAKH,MAAMT,OACjBf,MAAO,CACHA,MAAO+B,EAAMC,OAAOhC,MACpBC,QAAS8B,EAAMC,OAAOC,kBAI9BN,KAAKH,MAAMU,SAASnB,oCAGf,IAAAoB,EAAAR,KACL,OACIS,EAAAC,EAAAC,cAACC,EAAA,EAAKC,MAAN,KACIJ,EAAAC,EAAAC,cAACC,EAAA,EAAKE,MAAN,KAAad,KAAKH,MAAMkB,OACI,UAA3Bf,KAAKH,MAAMmB,aACRP,EAAAC,EAAAC,cAACC,EAAA,EAAKK,QAAN,CAAc5B,KAAMW,KAAKH,MAAMR,KAAM6B,OAAQ,SAACd,GAAD,OAAWI,EAAKW,UAAUf,IAAQgB,SAAUpB,KAAKH,MAAMuB,SAAUC,QAASrB,KAAKH,MAAMwB,QAASC,IAAKtB,KAAKH,MAAMyB,IAAKC,IAAKvB,KAAKH,MAAM0B,IAAKC,aAAcxB,KAAKH,MAAMxB,QAEtL,aAA3B2B,KAAKH,MAAMmB,aACRP,EAAAC,EAAAC,cAACC,EAAA,EAAKK,QAAN,CAAcQ,GAAG,WAAWC,KAAK,IAAIR,OAAQ,SAACd,GAAD,OAAWI,EAAKW,UAAUf,IAAQgB,SAAUpB,KAAKH,MAAMuB,SAAUC,QAASrB,KAAKH,MAAMwB,QAASG,aAAcxB,KAAKH,MAAMxB,gBAvCpKsD,cAAd/B,EAMKgC,aAAe,CAClBZ,YAAa,SAwCNa,oBAAUjC,mCC/CnBkC,qBAEF,SAAAA,EAAYjC,GAAM,IAAAC,EAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAQ,KAAA8B,IACdhC,EAAAN,OAAAS,EAAA,EAAAT,CAAAQ,KAAAR,OAAAU,EAAA,EAAAV,CAAAsC,GAAA3B,KAAAH,KAAMH,KACDb,MAAQ,CACTV,SAAS,GAHCwB,2EAQXE,KAAKH,MAAMkC,KAAK3D,UAAUE,SAAW0B,KAAKH,MAAMkC,KAAKxD,SAASD,QAC7D0B,KAAKH,MAAMmC,QAAQC,KAAK,YAExBjC,KAAKkC,SAAS,CACV5D,SAAS,qCAKZ,IAAAkC,EAAAR,KACL,OACIS,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAKC,UAAU,WACX3B,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKD,UAAU,gCACX3B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAKG,GAAI,GACL7B,EAAAC,EAAAC,cAAC4B,EAAD,CAAOxB,MAAM,YAAY1B,KAAK,OAAOD,OAAO,gBAAgBgC,UAAU,EAAMC,QAAQ,iBAAiBhD,MAAO2B,KAAKH,MAAMkC,KAAK3D,UAAUC,QACtIoC,EAAAC,EAAAC,cAAC4B,EAAD,CAAOxB,MAAM,WAAW1B,KAAK,OAAOD,OAAO,eAAegC,UAAU,EAAMC,QAAQ,iBAAiBhD,MAAO2B,KAAKH,MAAMkC,KAAKxD,SAASF,SAEvIoC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAKG,GAAI,IACL7B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,KAAKC,QAAS,kBAAMnC,EAAKoC,cAAxD,WAKN5C,KAAKhB,MAAMV,SACTmC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAOJ,QAAQ,UAAf,oEAnCMd,cAmDXE,cANS,SAAC7C,GACrB,MAAO,CACH+C,KAAM/C,EAAMD,YAIL8C,CAAyBC,WClDlCgB,cAEF,SAAAA,EAAYjD,GAAM,IAAAC,EAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAQ,KAAA8C,IACdhD,EAAAN,OAAAS,EAAA,EAAAT,CAAAQ,KAAAR,OAAAU,EAAA,EAAAV,CAAAsD,GAAA3C,KAAAH,KAAMH,KACDb,MAAQ,CACTV,SAAS,GAHCwB,2EAQXE,KAAKH,MAAMkC,KAAKvD,OAAOF,SACtB0B,KAAKH,MAAMkC,KAAKtD,OAAOH,SACvB0B,KAAKH,MAAMkC,KAAKrD,IAAIJ,SACpB0B,KAAKH,MAAMkC,KAAKpD,KAAKL,QAErB0B,KAAKH,MAAMmC,QAAQC,KAAK,QAExBjC,KAAKkC,SAAS,CACV5D,SAAS,qCAKZ,IAAAkC,EAAAR,KACL,OACIS,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAKC,UAAU,WACX3B,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKD,UAAU,gCACX3B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAKG,GAAI,GACL7B,EAAAC,EAAAC,cAAC4B,EAAD,CAAOxB,MAAM,SAAS1B,KAAK,OAAOD,OAAO,aAAagC,UAAU,EAAM/C,MAAO2B,KAAKH,MAAMkC,KAAKvD,OAAOH,QACpGoC,EAAAC,EAAAC,cAAC4B,EAAD,CAAOxB,MAAM,SAAS1B,KAAK,OAAOD,OAAO,aAAagC,UAAU,EAAOC,QAAQ,oBAAoBhD,MAAO2B,KAAKH,MAAMkC,KAAKtD,OAAOJ,QACjIoC,EAAAC,EAAAC,cAAC4B,EAAD,CAAOxB,MAAM,WAAW1B,KAAK,SAASD,OAAO,UAAUgC,UAAU,EAAME,IAAI,OAAOC,IAAI,OAAOlD,MAAO2B,KAAKH,MAAMkC,KAAKrD,IAAIL,QACxHoC,EAAAC,EAAAC,cAAC4B,EAAD,CAAOxB,MAAM,OAAO1B,KAAK,OAAOD,OAAO,WAAWgC,UAAU,EAAMC,QAAQ,iBAAiBhD,MAAO2B,KAAKH,MAAMkC,KAAKpD,KAAKN,SAE3HoC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAKG,GAAI,IACL7B,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAMX,UAAU,sCAAsCY,GAAG,KAAzD,YACAvC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,KAAKC,QAAS,kBAAMnC,EAAKoC,cAAxD,WAKN5C,KAAKhB,MAAMV,SACbmC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAOJ,QAAQ,UAAf,oEA1CMd,aAyDPE,cANS,SAAC7C,GACrB,MAAO,CACH+C,KAAM/C,EAAMD,YAIL8C,CAAyBiB,GCzDlCG,cACF,SAAAA,EAAYpD,GAAM,IAAAC,EAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAQ,KAAAiD,IACdnD,EAAAN,OAAAS,EAAA,EAAAT,CAAAQ,KAAAR,OAAAU,EAAA,EAAAV,CAAAyD,GAAA9C,KAAAH,KAAMH,KACDb,MAAQ,CACTV,SAAS,GAHCwB,2EAQd,GAAGE,KAAKH,MAAMkC,KAAKnD,SAASN,SAAW0B,KAAKH,MAAMkC,KAAKlD,eAAeP,QAAQ,CAI1E0B,KAAKH,MAAMU,SAHI,CACXlB,KAAM,gBAGVW,KAAKH,MAAMmC,QAAQC,KAAK,gBAExBjC,KAAKkC,SAAS,CACV5D,SAAS,qCAKZ,IAAAkC,EAAAR,KACL,OACIS,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAKC,UAAU,WACX3B,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKD,UAAU,gCACX3B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAKG,GAAI,GACL7B,EAAAC,EAAAC,cAAC4B,EAAD,CAAOxB,MAAM,YAAY1B,KAAK,OAAOD,OAAO,eAAegC,UAAU,EAAM/C,MAAO2B,KAAKH,MAAMkC,KAAKnD,SAASP,QAC3GoC,EAAAC,EAAAC,cAAC4B,EAAD,CAAOxB,MAAM,cAAcC,YAAY,WAAW5B,OAAO,qBAAqBgC,UAAU,EAAM/C,MAAO2B,KAAKH,MAAMkC,KAAKlD,eAAeR,SAExIoC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAKG,GAAI,IACL7B,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAMX,UAAU,sCAAsCY,GAAG,YAAzD,YACAvC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,KAAKC,QAAS,kBAAMnC,EAAKoC,cAAxD,aAKN5C,KAAKhB,MAAMV,SACbmC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAOJ,QAAQ,UAAf,oEAvCEd,aAsDHE,cANS,SAAC7C,GACrB,MAAO,CACH+C,KAAM/C,EAAMD,YAIL8C,CAAyBoB,GCxDlCA,cACJ,SAAAA,EAAYpD,GAAM,IAAAC,EAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAQ,KAAAiD,IAChBnD,EAAAN,OAAAS,EAAA,EAAAT,CAAAQ,KAAAR,OAAAU,EAAA,EAAAV,CAAAyD,GAAA9C,KAAAH,KAAMH,KACGA,MAAMkC,KAAKjD,aAClBgB,EAAKD,MAAMmC,QAAQC,KAAK,KAHVnC,wEAShB,OACIW,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAKC,UAAU,WACb3B,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKD,UAAU,gCACb3B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAKG,GAAI,GACP7B,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAOJ,QAAQ,WACbhC,EAAAC,EAAAC,cAACkC,EAAA,EAAMK,QAAP,YAAoBlD,KAAKH,MAAMkC,KAAK3D,UAAUC,MAA9C,qBACAoC,EAAAC,EAAAC,cAAA,qNAjBEgB,aAoCHE,cANS,SAAC7C,GACvB,MAAO,CACL+C,KAAM/C,EAAMD,YAID8C,CAAyBoB,GCAzBE,cAhCX,SAAAA,EAAYtD,GAAM,IAAAC,EAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAQ,KAAAmD,IACdrD,EAAAN,OAAAS,EAAA,EAAAT,CAAAQ,KAAAR,OAAAU,EAAA,EAAAV,CAAA2D,GAAAhD,KAAAH,KAAMH,KACDuD,OAAS,CACV,CACIC,KAAM,IACNC,UAAWxB,GAEf,CACIuB,KAAM,WACNC,UAAWR,GAEf,CACIO,KAAM,OACNC,UAAWL,GAEf,CACII,KAAM,UACNC,UAAWC,IAjBLzD,wEAuBd,OACIW,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KACKrC,KAAKoD,OAAOI,IAAI,SAACC,EAAOC,GAAR,OAAcjD,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAOC,OAAK,EAACC,IAAKH,EAAGL,KAAMI,EAAMJ,KAAMC,UAAWG,EAAMH,sBA1BlF3B,8BCiCNmC,0LA9BX,OACIrD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAUC,MAAOC,GACbxD,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,OACb3B,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAQC,GAAG,OAAO1B,QAAQ,QACxBhC,EAAAC,EAAAC,cAACuD,EAAA,EAAOE,MAAR,CAAcC,KAAK,SACjB5D,EAAAC,EAAAC,cAAA,OACI2D,IAAI,GACJC,IAAI,mBACJC,MAAM,KACNC,OAAO,KACPrC,UAAU,6BAEb,iBAGL3B,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,KACEjE,EAAAC,EAAAC,cAAA,OAAK4D,IAAKI,IAAMvC,UAAU,WAAWkC,IAAI,SACzC7D,EAAAC,EAAAC,cAAA,0BAEFF,EAAAC,EAAAC,cAACiE,EAAA,EAAD,KACEnE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,KACEpE,EAAAC,EAAAC,cAACmE,EAAD,iBAvBAnD,cCGEoD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5E,EAAAC,EAAAC,cAAC2E,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b5115001.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const initialState = {\r\n    firstName: {\r\n        value: null,\r\n        isValid: false,\r\n    },\r\n    lastName: {\r\n        value: null,\r\n        isValid: false,\r\n    },\r\n    street: {\r\n        value: null,\r\n        isValid: false,\r\n    },\r\n    number: {\r\n        value: null,\r\n        isValid: false,\r\n    },\r\n    zip: {\r\n        value: null,\r\n        isValid: false,\r\n    },\r\n    city: {\r\n        value: null,\r\n        isValid: false,\r\n    },\r\n    jobTitle: {\r\n        value: null,\r\n        isValid: false,\r\n    },\r\n    jobDescription: {\r\n        value: null,\r\n        isValid: false,\r\n    },\r\n    isCompleted: false\r\n}\r\n\r\n/**\r\n * State doit rester immuable !\r\n * @param state\r\n * @param action\r\n * @returns {*}\r\n */\r\nfunction setInputs(state = initialState, action) {\r\n    let nextState\r\n    switch (action.type) {\r\n        case 'SET_FIRSTNAME':\r\n            console.log('eeeeeeeeeeee')\r\n            return nextState = {\r\n                ...state,\r\n                firstName: action.value\r\n            }\r\n        case 'SET_LASTNAME':\r\n            return nextState = {\r\n                ...state,\r\n                lastName: action.value\r\n            }\r\n        case 'SET_STREET':\r\n            return nextState = {\r\n                ...state,\r\n                street: action.value\r\n            }\r\n        case 'SET_NUMBER':\r\n            return nextState = {\r\n                ...state,\r\n                number: action.value\r\n            }\r\n        case 'SET_ZIP':\r\n            return nextState = {\r\n                ...state,\r\n                zip: action.value\r\n            }\r\n        case 'SET_CITY':\r\n            return nextState = {\r\n                ...state,\r\n                city: action.value\r\n            }\r\n        case 'SET_JOBTITLE':\r\n            return nextState = {\r\n                ...state,\r\n                jobTitle: action.value\r\n            }\r\n        case 'SET_JOBDESCRIPTION':\r\n            return nextState = {\r\n                ...state,\r\n                jobDescription: action.value\r\n            }\r\n        case 'TO_COMPLETE':\r\n            return nextState = {\r\n                ...state,\r\n                isCompleted: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default setInputs","import { createStore, combineReducers } from 'redux'\r\nimport setInputs from './Reducers/formReducer'\r\n\r\nexport default createStore(combineReducers({setInputs}))","import React, {Component} from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport PropTypes from 'prop-types'\r\nimport '../Styles/Input.css'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Input extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.value = ''\r\n    }\r\n\r\n    static defaultProps = {\r\n        elementType: 'input'\r\n    }\r\n\r\n\r\n    static propTypes = {\r\n        label: PropTypes.string,\r\n        type: PropTypes.oneOf(['email', 'text', 'number']),\r\n        elementType: PropTypes.oneOf(['input', 'textarea']),\r\n        action: PropTypes.string,\r\n        value: PropTypes.any.isRequired,\r\n    }\r\n\r\n    _setValue(event){\r\n        const action = {\r\n            type: this.props.action,\r\n            value: {\r\n                value: event.target.value,\r\n                isValid: event.target.checkValidity(),\r\n            }\r\n        }\r\n\r\n        this.props.dispatch(action)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form.Group>\r\n                <Form.Label>{this.props.label}</Form.Label>\r\n                {this.props.elementType === 'input' &&\r\n                    <Form.Control type={this.props.type} onBlur={(event) => this._setValue(event)} required={this.props.required} pattern={this.props.pattern} min={this.props.min} max={this.props.max} defaultValue={this.props.value}/>\r\n                }\r\n                {this.props.elementType === 'textarea' &&\r\n                    <Form.Control as=\"textarea\" rows=\"3\" onBlur={(event) => this._setValue(event)} required={this.props.required} pattern={this.props.pattern} defaultValue={this.props.value}/>\r\n                }\r\n            </Form.Group>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(Input)","import React, {Component} from 'react'\r\nimport Input from './Input'\r\nimport { Row, Col, Button, Alert } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport '../Styles/formStep.css'\r\n\r\nclass Information extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            isValid: true\r\n        }\r\n    }\r\n\r\n    _nextStep() {\r\n        if(this.props.form.firstName.isValid && this.props.form.lastName.isValid){\r\n            this.props.history.push('/address')\r\n        }else{\r\n            this.setState({\r\n                isValid: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Col className=\"section\">\r\n                <h3>Informations</h3>\r\n                <Row className=\"justify-content-center pb-15\">\r\n                    <Col md={7}>\r\n                        <Input label='Firstname' type='text' action=\"SET_FIRSTNAME\" required={true} pattern=\"[A-Za-z]{3,50}\" value={this.props.form.firstName.value}/>\r\n                        <Input label='Lastname' type='text' action=\"SET_LASTNAME\" required={true} pattern=\"[A-Za-z]{3,50}\" value={this.props.form.lastName.value}/>\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <Button variant=\"primary\" size=\"lg\" onClick={() => this._nextStep()}>\r\n                            Next\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                {!this.state.isValid &&\r\n                    <Alert variant=\"danger\">\r\n                        Some required fields are missing, empty or in bad format\r\n                    </Alert>\r\n                }\r\n\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        form: state.setInputs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Information)","import React, {Component} from 'react';\r\nimport Input from './Input'\r\nimport {Row, Col, Button, Alert} from 'react-bootstrap';\r\nimport '../Styles/formStep.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Address extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            isValid: true\r\n        }\r\n    }\r\n\r\n    _nextStep() {\r\n        if(this.props.form.street.isValid &&\r\n            this.props.form.number.isValid &&\r\n            this.props.form.zip.isValid &&\r\n            this.props.form.city.isValid\r\n        ){\r\n            this.props.history.push('/job')\r\n        }else{\r\n            this.setState({\r\n                isValid: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Col className=\"section\">\r\n                <h3>Address</h3>\r\n                <Row className=\"justify-content-center pb-15\">\r\n                    <Col md={7}>\r\n                        <Input label='Street' type='text' action=\"SET_STREET\" required={true} value={this.props.form.street.value}/>\r\n                        <Input label='Number' type='text' action=\"SET_NUMBER\" required={false} pattern=\"[0-9A-Za-z]{0,50}\" value={this.props.form.number.value}/>\r\n                        <Input label='Zip code' type='number' action=\"SET_ZIP\" required={true} min=\"1000\" max=\"9999\" value={this.props.form.zip.value}/>\r\n                        <Input label='City' type='text' action=\"SET_CITY\" required={true} pattern=\"[A-Za-z]{3,50}\" value={this.props.form.city.value}/>\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <Link className=\"btn btn-primary btn-lg btn-previous\" to=\"/\">Previous</Link>\r\n                        <Button variant=\"primary\" size=\"lg\" onClick={() => this._nextStep()}>\r\n                            Next\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                {!this.state.isValid &&\r\n                <Alert variant=\"danger\">\r\n                    Some required fields are missing, empty or in bad format\r\n                </Alert>\r\n                }\r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        form: state.setInputs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Address)","import React, {Component} from 'react';\r\nimport Input from './Input'\r\nimport {Row, Col, Button, Alert} from 'react-bootstrap';\r\nimport '../Styles/formStep.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Job extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            isValid: true\r\n        }\r\n    }\r\n\r\n    _nextStep() {\r\n        if(this.props.form.jobTitle.isValid && this.props.form.jobDescription.isValid){\r\n            const action = {\r\n                type: 'TO_COMPLETE',\r\n            }\r\n            this.props.dispatch(action)\r\n            this.props.history.push('/result')\r\n        }else{\r\n            this.setState({\r\n                isValid: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Col className=\"section\">\r\n                <h3>Job</h3>\r\n                <Row className=\"justify-content-center pb-15\">\r\n                    <Col md={7}>\r\n                        <Input label='Job title' type='text' action=\"SET_JOBTITLE\" required={true} value={this.props.form.jobTitle.value}/>\r\n                        <Input label='Description' elementType='textarea' action=\"SET_JOBDESCRIPTION\" required={true} value={this.props.form.jobDescription.value}/>\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <Link className=\"btn btn-primary btn-lg btn-previous\" to=\"/address\">Previous</Link>\r\n                        <Button variant=\"primary\" size=\"lg\" onClick={() => this._nextStep()}>\r\n                            Finish\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                {!this.state.isValid &&\r\n                <Alert variant=\"danger\">\r\n                    Some required fields are missing, empty or in bad format\r\n                </Alert>\r\n                }\r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        form: state.setInputs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Job)","import React, {Component} from 'react';\nimport {Row, Col, Alert} from 'react-bootstrap';\nimport '../Styles/formStep.css'\nimport {connect} from \"react-redux\";\n\nclass Job extends Component {\n  constructor(props){\n    super(props)\n    if(!this.props.form.isCompleted){\n      this.props.history.push('/')\n    }\n\n  }\n\n  render() {\n    return (\n        <Col className=\"section\">\n          <h3>Result</h3>\n          <Row className=\"justify-content-center pb-15\">\n            <Col md={7}>\n              <Alert variant=\"success\">\n                <Alert.Heading>Hey {this.props.form.firstName.value}, nice to see you</Alert.Heading>\n                <p>\n                  Aww yeah, you successfully read this important alert message. This example\n                  text is going to run a bit longer so that you can see how spacing within an\n                  alert works with this kind of content.\n                </p>\n              </Alert>\n            </Col>\n          </Row>\n        </Col>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    form: state.setInputs\n  }\n}\n\nexport default connect(mapStateToProps)(Job)","import React, {Component} from 'react';\r\nimport {Route} from 'react-router-dom'\r\nimport Information from '../Components/Information';\r\nimport Address from '../Components/Address';\r\nimport Job from '../Components/Job';\r\nimport Result from '../Components/Result';\r\nimport { Row } from 'react-bootstrap';\r\n\r\nclass Routes extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.routes = [\r\n            {\r\n                path: \"/\",\r\n                component: Information\r\n            },\r\n            {\r\n                path: \"/address\",\r\n                component: Address\r\n            },\r\n            {\r\n                path: \"/job\",\r\n                component: Job\r\n            },\r\n            {\r\n                path: \"/result\",\r\n                component: Result\r\n            },\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row>\r\n                {this.routes.map((route, i) => <Route exact key={i} path={route.path} component={route.component}/>)}\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Routes;","import React, { Component } from 'react'\nimport {BrowserRouter as Router } from 'react-router-dom'\nimport { Navbar,  Jumbotron, Container } from 'react-bootstrap'\nimport { Provider } from 'react-redux'\nimport Store from './Store/configureStore'\nimport Routes from './Routes/Routes'\nimport logo from './logo.svg'\nimport './App.css'\n\nclass App extends Component {\n  render() {\n    return (\n        <Provider store={Store}>\n            <div className=\"App\">\n              <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">\n                  <img\n                      alt=\"\"\n                      src=\"/images/logo.svg\"\n                      width=\"30\"\n                      height=\"30\"\n                      className=\"d-inline-block align-top\"\n                  />\n                  {' Form Wizard'}\n                </Navbar.Brand>\n              </Navbar>\n              <Jumbotron>\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <h1>Form Wizard</h1>\n              </Jumbotron>\n              <Container>\n                <Router>\n                  <Routes/>\n                </Router>\n              </Container>\n            </div>\n        </Provider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}